df$Percent <- df$values/sum(df$values)
df
# Create a basic bar
barChart <- ggplot(df, aes(x="", y=Percent, fill=names)) + geom_bar(stat="identity", width=1)
# Remove labels and add title
pieChart <- pieChart + labs(x = NULL, y = NULL, fill = NULL, title = "Share of Values")
print(barChart)
print(pieChart)
TeamA <- data.frame(playernumber=playernumber,playerstrength=playerstrength)
playernumber <- c(1,2,3,4)
playerstrength <- c(2,4,6,8)
TeamA <- data.frame(playernumber=playernumber,playerstrength=playerstrength)
TeamA
player_number_A <- c(1,2,3,4)
player_strength_A <- c(2,4,6,8)
TeamA <- data.frame(playernumber=player_number_A,playerstrength=player_strength_A)
TeamA
rev(player_stength_A)
player_stength_A
player_number_A <- c(1,2,3,4)
player_strength_A <- c(2,4,6,8)
TeamA <- data.frame(playernumber=player_number_A,playerstrength=player_strength_A)
player_number_B <- c(1,2,3,4)
rev(player_stength_A)
rev(player_strength_A)
player_strength_B <- rev(player_strength_A)
TeamB <- data.frame(playernumber=player_number_B,playerstrength=player_strength_B)
TeamB
library(RSQLite)
install.packages("RSQLite")
library(RSQLite)
db <- dbConnect(SQLite,dbname="c:\\users\\david\\google drive\\projects\\fpl_fantasy_football\\data\\fpl-player-stats.db")
db <- dbConnect(SQLite(),dbname="c:\\users\\david\\google drive\\projects\\fpl_fantasy_football\\data\\fpl-player-stats.db")
dbListTables(db)
df_stats <- dbReadTable(conn=db,name="player_stats")
dbDisconnect(db)
head(df_stats)
library(wordcloud)
install.packages("wordcloud")
library(wordcloud)
head(df_stats)
head(df_stats)
minWordFreq <- 1000
word_names <- df_stats$second_name
word_values <- df_stats$total_points*100
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
minWordFreq <- 3000
word_names <- df_stats$second_name
word_values <- df_stats$total_points*100
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
minWordFreq <- 2000
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
minWordFreq <- 2500
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
minWordFreq <- 2500
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
library(ggplot2)
head(df_stats)
df_filter <- df_stats %>% filter(position == Midfielders)
library(tidyverse)
df_filter <- df_stats %>% filter(position == Midfielders)
df_filter <- df_stats %>% filter(position == "Midfielders")
head(df_filter)
word_names <- df_filter$second_name
word_values <- df_filter$total_points*100
minWordFreq <- 2500
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
df_filter <- df_stats %>% filter(position == "Defenders")
head(df_filter)
word_names <- df_filter$second_name
word_values <- df_filter$total_points*100
minWordFreq <- 2500
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
df_filter <- df_stats %>% filter(position == "Defenders")
head(df_filter)
word_names <- df_filter$second_name
word_values <- df_filter$total_points*100
minWordFreq <- 3000
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
df_filter <- df_stats %>% filter(position == "Defenders")
head(df_filter)
word_names <- df_filter$second_name
word_values <- df_filter$total_points*100
minWordFreq <- 1000
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
df_filter <- df_stats %>% filter(position == "Midfielders")
head(df_filter)
word_names <- df_filter$second_name
word_values <- df_filter$total_points*100
minWordFreq <- 1000
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
team_avge <- df_stats %>% summarize(mean_points = mean(`total_points`),
mean_points_cost = mean(`points_to_cost`))
team_avge
team_avge <- df_stats %>%
group_by(team_name) %>%
summarize(mean_points = mean(`total_points`),
mean_points_cost = mean(`points_to_cost`))
team_avge
p1<- ggplot(team_avge, aes(mean_points, mean_points_cost, name = team_name, color = team_name)) + geom_point()
p1
library(plotly)
library(plotly)
ggplotly(p1)
team_avge <- df_stats %>%
group_by(team_name) %>%
summarize(`average points` = mean(`total_points`),
mean_points_cost = mean(`points_to_cost`))
team_avge
team_avge <- df_stats %>%
group_by(team_name) %>%
summarize(`average points` = mean(`total_points`),
mean_points_cost = mean(`points_to_cost`))
p1<- ggplot(team_avge, aes(`average points`, mean_points_cost, name = team_name, color = team_name)) + geom_point()
p1
team_avge <- df_stats %>%
group_by(team_name) %>%
summarize(`average points` = mean(`total_points`),
`average points to cost` = mean(`points_to_cost`))
p1<- ggplot(team_avge, aes(`average points`, `average points to cost`, name = team_name, color = team_name)) + geom_point()
p1
ggplotly(p1)
word_names <- df_stats$second_name
word_values <- df_stats$total_points*100
minWordFreq <- 2500
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
df_filter <- df_stats %>% filter(position == "Midfielders")
head(df_filter)
word_names <- df_filter$second_name
word_values <- df_filter$total_points*100
minWordFreq <- 1000
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
team_avge <- df_filter %>%
group_by(team_name) %>%
summarize(`average points` = mean(`total_points`),
`average points to cost` = mean(`points_to_cost`))
p1<- ggplot(team_avge, aes(`average points`, `average points to cost`, name = team_name, color = team_name)) + geom_point()
ggplotly(p1)
team_avge <- df_stats %>%
group_by(team_name) %>%
summarize(`average points` = mean(`total_points`),
`average points to cost` = mean(`points_to_cost`))
p1<- ggplot(team_avge, aes(`average points`, `average points to cost`, name = team_name, color = team_name)) + geom_point()
#p1
ggplotly(p1)
position_filter = "Midfielders"
df_filter <- df_stats %>% filter(position == position_filter)
head(df_filter)
word_names <- df_filter$second_name
word_values <- df_filter$total_points*100
minWordFreq <- 1000
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
team_avge <- df_stats %>%
group_by(team_name) %>%
summarize(`average points` = mean(`total_points`),
`average points to cost` = mean(`points_to_cost`))
p1<- ggplot(team_avge, aes(`average points`, `average points to cost`, name = team_name, color = team_name)) + geom_point()
#p1
ggplotly(p1)
word_names <- df_stats$second_name
word_values <- df_stats$total_points*100
minWordFreq <- 2500
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
position_filter = "Midfielders"
df_filter <- df_stats %>% filter(position == position_filter)
head(df_filter)
word_names <- df_filter$second_name
word_values <- df_filter$total_points*100
minWordFreq <- 1000
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
word_names <- df_stats$second_name
word_values <- df_stats$total_points*100
minWordFreq <- 2500
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
position_filter = "Midfielders"
df_filter <- df_stats %>% filter(position == position_filter)
head(df_filter)
word_names <- df_filter$second_name
word_values <- df_filter$total_points*100
minWordFreq <- 1000
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
position_filter = "Defenders"
df_filter <- df_stats %>% filter(position == position_filter)
head(df_filter)
word_names <- df_filter$second_name
word_values <- df_filter$total_points*100
minWordFreq <- 1000
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
team_avge <- df_stats %>%
group_by(team_name) %>%
summarize(`average points` = mean(`total_points`),
`average points to cost` = mean(`points_to_cost`))
p1<- ggplot(team_avge, aes(`average points`, `average points to cost`, name = team_name, color = team_name)) + geom_point()
#p1
ggplotly(p1)
position_filter = "Defenders"
df_filter <- df_stats %>% filter(position == position_filter)
head(df_filter)
word_names <- df_filter$second_name
word_values <- df_filter$total_points
minWordFreq <- 10
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
library(wordcloud)
position_filter = "Defenders"
df_filter <- df_stats %>% filter(position == position_filter)
head(df_filter)
word_names <- df_filter$second_name
word_values <- df_filter$total_points
minWordFreq <- 10
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
position_filter = "Forwards"
df_filter <- df_stats %>% filter(position == position_filter)
head(df_filter)
word_names <- df_filter$second_name
word_values <- df_filter$total_points
minWordFreq <- 10
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
minWordFreq <- 20
wordcloud(word_names, word_values, min.freq = minWordFreq,random.order=FALSE, scale = c(4, 0.2),colors=brewer.pal(8, "Dark2"))
head(df_filter)
install.packages("flexdashboard")
head(df_stats)
df_stats[:,`points_to_cost`]
df_stats[,`points_to_cost`]
df_stats[,`points_to_cost`]
df_stats$points_to_cost
install.packages("flexdashboard")
install.packages("flexdashboard")
library(flexdashboard)
knit_with_parameters('C:/Users/david/Google Drive/Projects/fpl_fantasy_football/R/markdown.Rmd')
position_filter = "Forwards"
team_avge <- df_stats %>% filter(position == position_filter)
# Import data
db <- dbConnect(SQLite(),dbname="c:\\users\\david\\google drive\\projects\\fpl_fantasy_football\\data\\fpl-player-stats.db")
#dbListTables(db)
df_stats <- dbReadTable(conn=db,name="player_stats")
dbDisconnect(db)
# Format columns
df_stats$points_to_cost <- round(df_stats$points_to_cost,1)
library(RSQLite)
# Import data
db <- dbConnect(SQLite(),dbname="c:\\users\\david\\google drive\\projects\\fpl_fantasy_football\\data\\fpl-player-stats.db")
#dbListTables(db)
df_stats <- dbReadTable(conn=db,name="player_stats")
dbDisconnect(db)
# Format columns
df_stats$points_to_cost <- round(df_stats$points_to_cost,1)
head(df_stats)
df_stats$points_to_cost <- round(df_stats$points_to_cost,1)
head(df_stats)
class(df_stats)
df_stats <- df_stats[,-index]
df_stats <- df_stats[,-"index"]
df_stats <- subset(df_stats, select=-c(index,team,element_type))
colnames(df_stats)
library(rmarkdown)
render("c:\\users\\david\\google drive\\projects\\fpl_fantasy_football\R\markdown.Rmd","c:\\users\\david\\fpl-dashboard.html")
render("c:\\users\\david\\google drive\\projects\\fpl_fantasy_football\\R\\markdown.Rmd","c:\\users\\david\\fpl-dashboard.html")
render("c:\\users\\david\\google drive\\projects\\fpl_fantasy_football\\R\\markdown.Rmd",output_file = "c:\\users\\david\\fpl-dashboard.html")
library(rmarkdown)
render("c:\\users\\david\\google drive\\projects\\FPL_fantasy_football\\R\\markdown.Rmd",output_file = "c:\\users\\david\\FPL-dashboard.html")
render("c:\\users\\david\\google drive\\projects\\FPL_fantasy_football\\R\\markdown.Rmd",output_file = "c:\\users\\david\\google drive\\projects\\FPL_fantasy_football\\output\\FPL-dashboard.html")
getwd()
Sys.info()[["user"]]
paste0("c:\\users\\",Sys.info()[["user"]],"\\")
paste0("c:\\users\\",Sys.info()[["user"]],"\\project-directories.csv")
dir_file_path <- paste0("c:\\users\\",Sys.info()[["user"]],"\\project-directories.csv")
dir_file_path
dir_file <- paste0("c:\\users\\",Sys.info()[["user"]],"\\project-directories.csv")
project_dir = read.csv(dir_file)
project_dir
project_name <- "FPL_fantasy_football"
data_dir$path
project_dir$path
unique(project_dir$path)
data_dir <- paste0("c:\\users\\",unique(project_dir$path),"projects",project_name,"\\data\\")
data_dir
paste0(data_dir,"FPL-player-stats.db")
data_dir <- paste0("c:\\users\\",unique(project_dir$path),"\\projects\\",project_name,"\\data\\")
paste0(data_dir,"FPL-player-stats.db")
library(RSQLite)
db <- dbConnect(SQLite(),dbname=paste0(data_dir,"FPL-player-stats.db"))
db <- dbConnect(SQLite(),dbname="c:\\users\\david\\google drive\\projects\\fpl_fantasy_football\\data\\FPL-player-stats.db")
paste0(data_dir,"FPL-player-stats.db")
current_user <- Sys.info()[["user"]]
current_user
dir_file <- paste0("c:\\users\\",current_user,"\\project-directories.csv")
dir_file
project_dir = read.csv(dir_file)
project_dir
data_dir <- paste0("c:\\users\\",current_user,unique(project_dir$path),"\\projects\\",project_name,"\\data\\")
data_dir
data_dir <- paste0("c:\\users\\",current_user,"\\",unique(project_dir$path),"\\projects\\",project_name,"\\data\\")
data_dir
dbDisconnect(db)
db <- dbConnect(SQLite(),dbname=paste0(data_dir,"FPL-player-stats.db"))
dbDisconnect(db)
current_user <- Sys.info()[["user"]]
dir_file <- paste0("c:\\users\\",current_user,"\\project-directories.csv")
project_dir = read.csv(dir_file)
project_name <- "FPL_fantasy_football"
data_dir <- paste0("c:\\users\\",current_user,"\\",unique(project_dir$path),"\\projects\\",project_name,"\\data\\")
r_dir <- paste0("c:\\users\\",current_user,"\\",unique(project_dir$path),"\\projects\\",project_name,"\\R\\")
output_dir <- paste0("c:\\users\\",current_user,"\\",unique(project_dir$path),"\\projects\\",project_name,"\\output\\")
output_dir
r_dir
paste0(r_dir,"markdown.Rmd")
paste0(output_dir,"FPL-dashboard.html")
render(paste0(r_dir,"markdown.Rmd"),output_file = paste0(output_dir,"FPL-dashboard.html"))
library(rmarkdown)
render(paste0(r_dir,"markdown.Rmd"),output_file = paste0(output_dir,"FPL-dashboard.html"))
warnings()
project_dir = read.csv(dir_file)
project_dir
unique(project_dir$sub_dir)
data_dir <- paste0("c:\\users\\",current_user,"\\",unique(project_dir$path),"\\",unique(project_dir$sub_dir),"\\",project_name,"\\data\\")
data_dir
project_dir[1,]
paste(project_dir[1,],sep="\\")
project_dir[1,]
paste(project_dir[1,],collapse="\\")
paste0("c:\\users\\",current_user,"\\",x,"\\")
x <- paste(project_dir[1,],collapse="\\")
paste0("c:\\users\\",current_user,"\\",x,"\\")
i <- 1
dir_str
dir_str <- paste(project_dir[i,],collapse="\\")
data_dir <- paste0("c:\\users\\",current_user,"\\",dir_str,"\\")
data_dir
sub_dir_str <- project_dir[i,"directory"]
sub_dir_str
paste0(sub_dir_str,"_dir")
paste0(sub_dir_str,"_dir <- ",paste0("c:\\users\\",current_user,"\\",dir_str,"\\"))
eval(parse(text=paste0(sub_dir_str,"_dir <- ",paste0("c:\\users\\",current_user,"\\",dir_str,"\\"))))
paste0(sub_dir_str,"_dir <- ",paste0("c:\\users\\",current_user,"\\",dir_str,"\\")
paste0(sub_dir_str,"_dir <- ",paste0("c:\\users\\",current_user,"\\",dir_str,"\\"))
paste0(sub_dir_str,"_dir <- ",paste0("c:\\users\\",current_user,"\\",dir_str,"\\"))
parse( text = paste0(sub_dir_str,"_dir <- ",paste0("c:\\users\\",current_user,"\\",dir_str,"\\"))
)
eval( parse( text = paste0(sub_dir_str,"_dir <- ",paste0("c:\\\\users\\",current_user,"\\",dir_str,"\\"))   ) )
paste0(sub_dir_str,"_dir <- ",paste0("c:\\users\\",current_user,"\\",dir_str,"\\"))
text = paste0(sub_dir_str,"_dir <- ",paste0("c:\\users\\",current_user,"\\",dir_str,"\\"))
text
text = paste0(sub_dir_str,"_dir <- ",""",paste0("c:\\users\\",current_user,"\\",dir_str,"\\"))
paste0(sub_dir_str,"_dir <- ",""",paste0("c:\\users\\",current_user,"\\",dir_str,"\\","""))
paste0(sub_dir_str,"_dir <- ","'",paste0("c:\\users\\",current_user,"\\",dir_str,"\\","'"))
text_str <- paste0(sub_dir_str,"_dir <- ","'",paste0("c:\\users\\",current_user,"\\",dir_str,"\\","'"))
text_str
eval(parse(text=text_str))
text_str
dir_str <- paste(project_dir[i,],collapse="/")
dir_str
data_dir <- paste0("c:/users/",current_user,"/",dir_str,"/")
data_dir
text_str <- paste0(sub_dir_str,"_dir <- ","'",paste0("c:/users/",current_user,"/",dir_str,"/","'"))
text_str
eval(parse(text=text_str))
data_dir
render(paste0(r_dir,"markdown.Rmd"),output_file = paste0(output_dir,"FPL-dashboard.html"))
for (i in 1:nrow(project_dir)){
#dir_str <- paste(project_dir[i,],collapse="\\")
dir_str <- paste(project_dir[i,],collapse="/")
sub_dir_str <- project_dir[i,"directory"]
#data_dir <- paste0("c:\\users\\",current_user,"\\",dir_str,"\\")
data_dir <- paste0("c:/users/",current_user,"/",dir_str,"/")
#text_str <- paste0(sub_dir_str,"_dir <- ","'",paste0("c:\\users\\",current_user,"\\",dir_str,"\\","'"))
text_str <- paste0(sub_dir_str,"_dir <- ","'",paste0("c:/users/",current_user,"/",dir_str,"/","'"))
eval(parse(text=text_str))
}
R_dir
sub_dir_str
project_dir[i,"directory"]
tolower(project_dir[i,"directory"])
for (i in 1:nrow(project_dir)){
dir_str <- paste(project_dir[i,],collapse="/")
sub_dir_str <- tolower(project_dir[i,"directory"])
text_str <- paste0(sub_dir_str,"_dir <- ","'",paste0("c:/users/",current_user,"/",dir_str,"/","'"))
eval(parse(text=text_str))
}
rm(list=ls())
unique(project_dir$sub_dir)
library(rmarkdown)
# Set up directories
current_user <- Sys.info()[["user"]]
dir_file <- paste0("c:\\users\\",current_user,"\\project-directories.csv")
project_dir = read.csv(dir_file)
project_name <- "FPL_fantasy_football"
for (i in 1:nrow(project_dir)){
dir_str <- paste(project_dir[i,],collapse="/")
sub_dir_str <- tolower(project_dir[i,"directory"])
text_str <- paste0(sub_dir_str,"_dir <- ","'",paste0("c:/users/",current_user,"/",dir_str,"/","'"))
eval(parse(text=text_str))
}
# render output
render(paste0(r_dir,"markdown.Rmd"),output_file = paste0(output_dir,"FPL-dashboard.html"))
# render output
render(paste0(r_dir,"markdown.Rmd"),output_file = paste0(output_dir,"FPL-dashboard.html"))
project_dir
project_dir$Project == project_name
current_user <- Sys.info()[["user"]]
dir_file <- paste0("c:\\users\\",current_user,"\\project-directories.csv")
project_dir = read.csv(dir_file)
project_dir
project_name <- "FPL_fantasy_football"
ind <- project_dir$Project == project_name
project_dir <- project_dir[ind,,drop=F]
project_dir
dir_file <- paste0("c:\\users\\",current_user,"\\project-directories.csv")
project_dir = read.csv(dir_file)
project_dir
project_name <- "FPL_fantasy_football"
row_ind <- project_dir$Project == project_name
project_dir <- project_dir[row_ind,,drop=F]
project_dir
render(paste0(r_dir,"markdown.Rmd"),output_file = paste0(output_dir,"FPL-dashboard.html"))
utils::getSrcDirectory
utils::getSrcDirectory()
dirname(parent.frame(2)$ofile)
# render output
render(paste0(r_dir,"markdown.Rmd"),output_file = paste0(output_dir,"FPL-dashboard.html"))
# render output
render(paste0(r_dir,"markdown.Rmd"),output_file = paste0(output_dir,"FPL-dashboard.html"))
# render output
render(paste0(r_dir,"markdown.Rmd"),output_file = paste0(output_dir,"FPL-dashboard.html"))
# render output
render(paste0(r_dir,"markdown.Rmd"),output_file = paste0(output_dir,"FPL-dashboard.html"))
library(rmarkdown)
# Set up directories
current_user <- Sys.info()[["user"]]
dir_file <- paste0("c:\\users\\",current_user,"\\project-directories.csv")
project_dir = read.csv(dir_file)
project_name <- "FPL_fantasy_football"
row_ind <- project_dir$Project == project_name
project_dir <- project_dir[row_ind,,drop=F]
for (i in 1:nrow(project_dir)){
dir_str <- paste(project_dir[i,],collapse="/")
sub_dir_str <- tolower(project_dir[i,"directory"])
text_str <- paste0(sub_dir_str,"_dir <- ","'",paste0("c:/users/",current_user,"/",dir_str,"/","'"))
eval(parse(text=text_str))
}
# render output
render(paste0(r_dir,"markdown.Rmd"),output_file = paste0(output_dir,"FPL-dashboard.html"))
library(rmarkdown)
# Set up directories
current_user <- Sys.info()[["user"]]
dir_file <- paste0("c:\\users\\",current_user,"\\project-directories.csv")
project_dir = read.csv(dir_file)
project_name <- "FPL_fantasy_football"
row_ind <- project_dir$Project == project_name
project_dir <- project_dir[row_ind,,drop=F]
for (i in 1:nrow(project_dir)){
dir_str <- paste(project_dir[i,],collapse="/")
sub_dir_str <- tolower(project_dir[i,"directory"])
text_str <- paste0(sub_dir_str,"_dir <- ","'",paste0("c:/users/",current_user,"/",dir_str,"/","'"))
eval(parse(text=text_str))
}
# render output
render(paste0(r_dir,"markdown.Rmd"),output_file = paste0(output_dir,"FPL-dashboard.html"))
library(rmarkdown)
# Set up directories
current_user <- Sys.info()[["user"]]
dir_file <- paste0("c:\\users\\",current_user,"\\project-directories.csv")
project_dir = read.csv(dir_file)
project_name <- "FPL_fantasy_football"
row_ind <- project_dir$Project == project_name
project_dir <- project_dir[row_ind,,drop=F]
for (i in 1:nrow(project_dir)){
dir_str <- paste(project_dir[i,],collapse="/")
sub_dir_str <- tolower(project_dir[i,"directory"])
text_str <- paste0(sub_dir_str,"_dir <- ","'",paste0("c:/users/",current_user,"/",dir_str,"/","'"))
eval(parse(text=text_str))
}
# render output
render(paste0(r_dir,"markdown.Rmd"),output_file = paste0(output_dir,"FPL-dashboard.html"))
path <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(path)
setwd('..')
path <- getwd()
path
dir_list <- list.dirs(recursive = FALSE)
dir_list <- str_replace(dir_list, "./", "")
library(knitr)
library(tidyverse)
path <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(path)
setwd('..')
path <- getwd()
dir_list <- list.dirs(recursive = FALSE)
dir_list
dir_list <- str_replace(dir_list, "./", "")
dir_list
dir_list <- list.dirs(recursive = FALSE)
dir_list
gsub("./", "", dir_list)
path <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(path)
setwd('..')
path <- getwd()
dir_list <- list.dirs(recursive = FALSE)
dir_list <- gsub("./", "", dir_list)
dir_list
for (sub_dir_name in dir_list){
if (sub_dir_name != ".git"){
str_1 = paste0(sub_dir_name,"_dir <- ")
str_2 = paste0("'",path,"/",sub_dir_name,"/'")
my_code <- paste0(str_1,str_2)
eval(parse(text=my_code))
}
}
library(rmarkdown)
# render output
render(paste0(R_dir,"markdown.Rmd"),output_file = paste0(output_dir,"FPL-dashboard.html"))
